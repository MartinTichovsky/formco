name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/package.json"
    tags-ignore:
      - v*
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.3.0

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.cache/Cypress
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        run: yarn

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: TypeScript check
        run: yarn tsc

  bump-version:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.3.0

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.cache/Cypress
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        run: yarn

      - name: Set creator
        run: |
          git config user.email "automated-version@users.noreply.github.com"
          git config user.name "Automated Version"

      - name: Increment version
        env:
          VERSION_TYPE: ${{ (startsWith(github.event.head_commit.message, 'BREAKING CHANGE:') || contains(toJSON(github.event.head_commit.message), '\n\nBREAKING CHANGE:')) && 'major' || (startsWith(github.event.head_commit.message, 'fix:') || contains(toJSON(github.event.head_commit.message), '\n\nfix:')) && 'patch' || 'minor' }}
        run: |
          yarn workspaces foreach -A version $VERSION_TYPE
          VERSION=$(node -p "require('./package.json').version")
          git commit -m "v$VERSION"

      - name: Push changes
        run: |
          git push --follow-tags
          git push --tags

      # - name: Build
      #   working-directory: ./packages/formco
      #   run: yarn build

      # - name: Publish package
      #   working-directory: ./packages/formco
      #   run: |
      #     npm config set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
      #     npm publish
